--[[________  ___  ________   ________  ___  ___  ___       ________  ________  ___  _________    ___    ___      ___    ___ 
|\   ____\|\  \|\   ___  \|\   ____\|\  \|\  \|\  \     |\   __  \|\   __  \|\  \|\___   ___\ |\  \  /  /|    |\  \  /  /|
\ \  \___|\ \  \ \  \\ \  \ \  \___|\ \  \\\  \ \  \    \ \  \|\  \ \  \|\  \ \  \|___ \  \_| \ \  \/  / /    \ \  \/  / /
 \ \_____  \ \  \ \  \\ \  \ \  \  __\ \  \\\  \ \  \    \ \   __  \ \   _  _\ \  \   \ \  \   \ \    / /      \ \    / / 
  \|____|\  \ \  \ \  \\ \  \ \  \|\  \ \  \\\  \ \  \____\ \  \ \  \ \  \\  \\ \  \   \ \  \   \/  /  /        /     \/  
    ____\_\  \ \__\ \__\\ \__\ \_______\ \_______\ \_______\ \__\ \__\ \__\\ _\\ \__\   \ \__\__/  / /         /  /\   \  
   |\_________\|__|\|__| \|__|\|_______|\|_______|\|_______|\|__|\|__|\|__|\|__|\|__|    \|__|\___/ /         /__/ /\ __\ 
   \|_________|                                                                              \|___|/          |__|/ \|__| 
                                                                                                                          
                                                                                                                      
]]
                                         
local start_time = tick()
print("Starting")
--------------------------------------------
local configs = { -- Configs are self explanatory
    prefix = "-",
    CrashStartOption = true,
    Joins = false,
    loadpub = false,
    antialt = false,
    AntiRocket = true,
    welcomemessage = true,
    antidog = true,
    antipunish = false,
}

cvis = {
	active = false,
	orbiter = lp,
	angle = 0,
	speed = 0.01
}

vis = {
	queue = false,
	active = false,
	amount = 12,
	size = '5/2/1',
	orbiter = lp,
	-- parts = {},
	angle = 0,
	speed = 0.01,
	mode = 3,
	velocity = 31.0042,
	modes = {},
	paints = {},
	paint = 'solid',
	radius = 10,
	solid = Color3.fromRGB(64, 128, 255),
	mind = 10,
	append = 0,
	debounce = false,
	var = 5,
	sinangle = 0,
	sinspeed = 0.01,
	freq = 2,
	amp = 5,
	sensitivity = 0.02
}

--// Spam \\---

game.Players.LocalPlayer.Chatted:Connect(function(msg)
	if string.sub(msg:lower(), 0, 5) == prefix.."spam" then 
		local text = string.sub(msg:lower(), 7)
		spam=true
		
		while spam == true do
			game.Players:Chat(text)
			task.wait()
		end
	end
end)

game.Players.LocalPlayer.Chatted:Connect(function(msg)
    if string.sub(msg:lower(), 0, 5) == prefix.."stop" then
        spam = false
    end
end)

game.Players.LocalPlayer.Chatted:Connect(function(msg)
    if string.sub(msg, 0, 3 + #prefix) == prefix.."lua" then 
        local code = string.sub(msg, 5 + #prefix)
        loadstring(code)()
    end
    end)

local Version = "0.12"
local hideid = "00000000000000000000000000000000000000000000000000000000000000000000"
local localplayer = game:GetService("Players").LocalPlayer

--------------------------------------------
local g = getgenv()
local Kohls = workspace.Terrain:WaitForChild("_Game")
for key, value in pairs(configs) do g[key] = value end
local loadtime = os.clock

anticrash = true
antihat = false
local lp = game.Players.LocalPlayer
--------------------------------------------
local onstart = { -- Commands that get said when script loaded
    "nok",
    "antikill", 
    "antihat",
    "antipunish",
    "antiblind",
    "antikick",
}
--------------------------------------------
local Blacklisted = { -- Autokick on join
}

local gearbl = {
    "atprog"
}

local GearWhitelisted = { -- Access to Crash Gears
    "Di33le2", "The_0BC", "Ripend", "SZCVAK", "KTMY1",
    "iTsMeRebirth555", "Altsarecooleh", "Thierry_BaudetREAL", "Dizzy_TheDev",
    "xorobf1239", "xorobf", "TechnoSniperX", "ovical",  --"3cxos",//
    "jjjuuikjjikkju",
    game.Players.LocalPlayer.Name
}
local tools = {
    vanquisher = "94794847",
    vanq = "94794847",
    vampire = "94794847",
    ar = "4842207161",
    cambreak = "4842207161"
}

local blacklistedGears = {
    "AmethystPeriastron", --      93136802
    "AzurePeriastron", --         69499437
    "ChartreusePeriastron", --    80661504
    "CrimsonPeriastron", --       99119240
    "FakeChartreusePeriastron", --          80597060
    "FallPeriastron", --          2544549379
    "FestivePeriastron", --       139577901
    "GrimgoldPeriastron", --      73829193
    "IvoryPeriastron", --         108158379
    "JoyfulPeriastron", --        233520257
    "NoirPeriastron", --          120307951
    "RainbowPeriastron", --        159229806
    "SubspaceTripmine",
    "AR",                --        4842207161 
    "SuperFlyGoldBoombox",
    "VampireVanquisher", --       94794847
    "OrinthianSwordAndShield",--  92628079
    "LaserFingerPointer",
    "Emerald Knights of the Seventh Sanctum Sword and Shield",
}
local periastron = {
    [93136802] = "AmethystPeriastron",
    [69499437] = "AzurePeriastron",
    [80661504] = "ChartreusePeriastron",
    [99119240] = "CrimsonPeriastron",
    [80597060] = "FakeChartreusePeriastron",
    [2544549379] = "FallPeriastron",
    [139577901] = "FestivePeriastron",
    [73829193] = "GrimgoldPeriastron",
    [108158379] = "IvoryPeriastron",
    [233520257] = "JoyfulPeriastron",
    [120307951] = "NoirPeriastron",
    [159229806] = "RainbowPeriastron"
}
local Loops = {}

local MarketplaceService = game:GetService("MarketplaceService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

--//functions

local function antiSpam()
    local charset = {"Â£", "$", "%", "^", "&", "*", "-", "_", "+", "=", "!", "@", ";", "~","(", ")", "`", "\\", "|", "[", "]", "{", "}", ":", "'", ".", ",", "<", ">","||||||||||||||||||||||||"}
    local f = ""
    for i=1,10 do
        f = f .. charset[math.random(1, #charset)]
    end
    return f
end

function tempCrash(seconds)
    notif("Temp Crashing", Color3.fromRGB(160, 32, 240), 1)
    wait(.35)
    local s = 0
    local eTime = os.time() + seconds
    game.Players:Chat("respawn all")
    repeat
        task.wait(0.05)
        game.Players:Chat("dog all " .. math.random(1, 1000) ..
                    math.random(1, 1000))
        game.Players:Chat("clone all " .. math.random(1, 1000) ..
                    math.random(1, 1000))
    until eTime < os.time()
    game.Players:Chat("undog all")    
    game.Players:Chat("removeclones")
end
function scrash() --//Person 299 Needed
    for i = 1, 5 do
        game.Players:Chat("size all .3")
    end
    for i = 1, 13 do
        game.Players:Chat("rocket/all all all 123456789")
        game.Players:Chat("freeze all all all 123456789")
        game.Players:Chat("dog all all all 123456789")
    end
    for i = 1, 5 do
        game.Players:Chat("size all 10")
    end
    for i = 1, 200 do
        game.Players:Chat("clone all all all 123456789")
    end
    while true do task.wait()
        game.Players:Chat("clone all all all 123456789")
    end
end

--// Cache a log into a file
function log_file(content: string): ()
	coroutine.wrap(function()
		if not isfolder('SinX') then
			makefolder('SinX')
			repeat task.wait() until isfolder('Sinx')
		end
		
		if not isfile('SinX/cache.txt') then
			writefile('SinX/cache.txt', '')
			repeat task.wait() until isfile('Sinx/cache.txt')
		end
		
		appendfile('SinX/cache.txt', content .. '\n')
		print(content)
	end)()
end

spawn(function()
    while wait(0.001) do
    if AntiRocket then  
for i,v in pairs(game.Workspace:GetDescendants()) do
if v.Name == "Rocket" then  
    v:Destroy()
end
    end
        end
    end
    end)

    spawn(function()
        while wait(0.001) do
        if AntiPunish then
            if character and character.Parent == game.Lighting then
                game.Players:Chat("unpunish me")
                character.Parent=workspace
            end
        end
    end
end)

function paintmap(message)
	pcall(function()
	colorAPI = {}
	game.Players:Chat("gear me 18474459")
	repeat task.wait() until lp.Backpack:FindFirstChild("PaintBucket")
	lp.Backpack:FindFirstChild("PaintBucket").Parent = lp.Character
		colorAPI.color = function(Part, color)
			local thread = coroutine.create(function() -- x3.5 speed boost
				local Arguments =
				{
					["Part"] = Part,
					["Color"] = color
				}
				game:GetService("Workspace")[game:GetService("Players").LocalPlayer.Name].PaintBucket:WaitForChild("Remotes").ServerControls:InvokeServer("PaintPart", Arguments)
			end)
			coroutine.resume(thread)
		end
		
		colorAPI.transformToColor3 = function(col)
			local r = col.r
			local g = col.g
			local b = col.b
			return Color3.new(r,g,b);
		end
		
		-- colorAPI.Color3 = function(brickColor)
		--     return colorAPI.transformToColor3(BrickColor.new(brickColor))
		-- end

		colorAPI.colorObbyBox = function(color) -- Default is "Teal"
			for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Obby Box"]:GetChildren()) do
				colorAPI.color(v, color) -- colorAPI.transformToColor3(BrickColor.new("Bright red"))
			end
		end
		
		colorAPI.colorObbyBricks = function(color)-- Default is "Really red"
			  for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Obby"]:GetChildren()) do
				colorAPI.color(v, color)
			end
		end
		
		colorAPI.colorAdminDivs = function(color)-- Default is "Dark stone grey"
			for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Admin Dividers"]:GetChildren()) do
				colorAPI.color(v, color)
			end
		end
		
		colorAPI.colorPads = function(color)-- Default is "Bright green"
			for i,v in pairs(game.Workspace.Terrain["_Game"].Admin["Pads"]:GetChildren()) do
				colorAPI.color(v.Head, color)
			end
		end
		
		colorAPI.colorHouse = function(arg)
			  local wallsC = arg.wallsC
			  local baseC = arg.baseC
			  local roofC = arg.roofC
			  local WANDDC = arg.WANDDC
			  local stairsC = arg.stairsC
			  local floorC = arg.floorC
			  local rooftsC = arg.rooftsC
			  local chiC = arg.chiC
			  
			  -------------------------------------------------------------------- House (really messy ik) --------------------------------------------------------------------
			  
				for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Basic House"]:GetChildren()) do
					coroutine.wrap(function()
							if v.Name == "SmoothBlockModel103" or v.Name == "SmoothBlockModel105" or v.Name == "SmoothBlockModel106" or v.Name == "SmoothBlockModel108" or v.Name == "SmoothBlockModel11" or v.Name == "SmoothBlockModel113" or v.Name == "SmoothBlockModel114" or v.Name == "SmoothBlockModel115" or v.Name == "SmoothBlockModel116" or v.Name == "SmoothBlockModel118" or v.Name == "SmoothBlockModel122" or v.Name == "SmoothBlockModel126" or v.Name == "SmoothBlockModel129" or v.Name == "SmoothBlockModel13" or v.Name == "SmoothBlockModel130" or v.Name == "SmoothBlockModel131" or v.Name == "SmoothBlockModel132" or v.Name == "SmoothBlockModel134" or v.Name == "SmoothBlockModel135" or v.Name == "SmoothBlockModel14" or v.Name == "SmoothBlockModel140" or v.Name == "SmoothBlockModel142" or v.Name == "SmoothBlockModel147" or v.Name == "SmoothBlockModel15" or v.Name == "SmoothBlockModel154" or v.Name == "SmoothBlockModel155" or v.Name == "SmoothBlockModel164" or v.Name == "SmoothBlockModel166" or v.Name == "SmoothBlockModel173" or v.Name == "SmoothBlockModel176" or v.Name == "SmoothBlockModel179" or v.Name == "SmoothBlockModel185" or v.Name == "SmoothBlockModel186" or v.Name == "SmoothBlockModel190" or v.Name == "SmoothBlockModel191" or v.Name == "SmoothBlockModel196" or v.Name == "SmoothBlockModel197" or v.Name == "SmoothBlockModel198" or v.Name == "SmoothBlockModel20" or v.Name == "SmoothBlockModel201" or v.Name == "SmoothBlockModel203" or v.Name == "SmoothBlockModel205" or v.Name == "SmoothBlockModel207" or v.Name == "SmoothBlockModel208" or v.Name == "SmoothBlockModel209" or v.Name == "SmoothBlockModel210" or v.Name == "SmoothBlockModel211" or v.Name == "SmoothBlockModel213" or v.Name == "SmoothBlockModel218" or v.Name == "SmoothBlockModel22" or v.Name == "SmoothBlockModel223" or v.Name == "SmoothBlockModel224" or v.Name == "SmoothBlockModel226" or v.Name == "SmoothBlockModel26" or v.Name == "SmoothBlockModel29" or v.Name == "SmoothBlockModel30" or v.Name == "SmoothBlockModel31" or v.Name == "SmoothBlockModel36" or v.Name == "SmoothBlockModel37" or v.Name == "SmoothBlockModel38" or v.Name == "SmoothBlockModel39" or v.Name == "SmoothBlockModel41" or v.Name == "SmoothBlockModel48" or v.Name == "SmoothBlockModel49" or v.Name == "SmoothBlockModel51" or v.Name == "SmoothBlockModel56" or v.Name == "SmoothBlockModel67" or v.Name == "SmoothBlockModel68" or v.Name == "SmoothBlockModel69" or v.Name == "SmoothBlockModel70" or v.Name == "SmoothBlockModel72" or v.Name == "SmoothBlockModel75" or v.Name == "SmoothBlockModel8" or v.Name == "SmoothBlockModel81" or v.Name == "SmoothBlockModel85" or v.Name == "SmoothBlockModel93" or v.Name == "SmoothBlockModel98" then
								colorAPI.color(v, wallsC) -- Default is "Brick yellow"
							end -- House walls
						
							if v.Name == "SmoothBlockModel40" then
								colorAPI.color(v, baseC) -- Default is "Bright green"
							end -- House grass base
						
							if v.Name == "SmoothBlockModel100" or v.Name == "SmoothBlockModel102" or v.Name == "SmoothBlockModel104" or v.Name == "SmoothBlockModel107" or v.Name == "SmoothBlockModel109" or v.Name == "SmoothBlockModel110" or v.Name == "SmoothBlockModel111" or v.Name == "SmoothBlockModel119" or v.Name == "SmoothBlockModel12" or v.Name == "SmoothBlockModel120" or v.Name == "SmoothBlockModel123" or v.Name == "SmoothBlockModel124" or v.Name == "SmoothBlockModel125" or v.Name == "SmoothBlockModel127" or v.Name == "SmoothBlockModel128" or v.Name == "SmoothBlockModel133" or v.Name == "SmoothBlockModel136" or v.Name == "SmoothBlockModel137" or v.Name == "SmoothBlockModel138" or v.Name == "SmoothBlockModel139" or v.Name == "SmoothBlockModel141" or v.Name == "SmoothBlockModel143" or v.Name == "SmoothBlockModel149" or v.Name == "SmoothBlockModel151" or v.Name == "SmoothBlockModel152" or v.Name == "SmoothBlockModel153" or v.Name == "SmoothBlockModel156" or v.Name == "SmoothBlockModel157" or v.Name == "SmoothBlockModel158" or v.Name == "SmoothBlockModel16" or v.Name == "SmoothBlockModel163" or v.Name == "SmoothBlockModel167" or v.Name == "SmoothBlockModel168" or v.Name == "SmoothBlockModel169" or v.Name == "SmoothBlockModel17" or v.Name == "SmoothBlockModel170" or v.Name == "SmoothBlockModel172" or v.Name == "SmoothBlockModel177" or v.Name == "SmoothBlockModel18" or v.Name == "SmoothBlockModel180" or v.Name == "SmoothBlockModel184" or v.Name == "SmoothBlockModel187" or v.Name == "SmoothBlockModel188" or v.Name == "SmoothBlockModel189" or v.Name == "SmoothBlockModel19" or v.Name == "SmoothBlockModel193" or v.Name == "SmoothBlockModel2" or v.Name == "SmoothBlockModel200" or v.Name == "SmoothBlockModel202" or v.Name == "SmoothBlockModel21" or v.Name == "SmoothBlockModel214" or v.Name == "SmoothBlockModel215" or v.Name == "SmoothBlockModel216" or v.Name == "SmoothBlockModel219" or v.Name == "SmoothBlockModel220" or v.Name == "SmoothBlockModel221" or v.Name == "SmoothBlockModel222" or v.Name == "SmoothBlockModel225" or v.Name == "SmoothBlockModel227" or v.Name == "SmoothBlockModel229" or v.Name == "SmoothBlockModel23" or v.Name == "SmoothBlockModel230" or v.Name == "SmoothBlockModel231" or v.Name == "SmoothBlockModel25" or v.Name == "SmoothBlockModel28" or v.Name == "SmoothBlockModel32" or v.Name == "SmoothBlockModel33" or v.Name == "SmoothBlockModel34" or v.Name == "SmoothBlockModel42" or v.Name == "SmoothBlockModel44" or v.Name == "SmoothBlockModel47" or v.Name == "SmoothBlockModel54" or v.Name == "SmoothBlockModel55" or v.Name == "SmoothBlockModel58" or v.Name == "SmoothBlockModel59" or v.Name == "SmoothBlockModel6" or v.Name == "SmoothBlockModel61" or v.Name == "SmoothBlockModel62" or v.Name == "SmoothBlockModel63" or v.Name == "SmoothBlockModel74" or v.Name == "SmoothBlockModel76" or v.Name == "SmoothBlockModel77" or v.Name == "SmoothBlockModel78" or v.Name == "SmoothBlockModel79" or v.Name == "SmoothBlockModel80" or v.Name == "SmoothBlockModel84" or v.Name == "SmoothBlockModel86" or v.Name == "SmoothBlockModel87" or v.Name == "SmoothBlockModel88" or v.Name == "SmoothBlockModel90" or v.Name == "SmoothBlockModel91" or v.Name == "SmoothBlockModel92" or v.Name == "SmoothBlockModel94" or v.Name == "SmoothBlockModel95" or v.Name == "SmoothBlockModel96" then
								colorAPI.color(v, roofC) -- Default is "Bright red"
							end -- House roof
						
							if v.Name == "SmoothBlockModel10" or v.Name == "SmoothBlockModel101" or v.Name == "SmoothBlockModel117" or v.Name == "SmoothBlockModel121" or v.Name == "SmoothBlockModel144" or v.Name == "SmoothBlockModel145" or v.Name == "SmoothBlockModel146" or v.Name == "SmoothBlockModel148" or v.Name == "SmoothBlockModel150" or v.Name == "SmoothBlockModel159" or v.Name == "SmoothBlockModel161" or v.Name == "SmoothBlockModel171" or v.Name == "SmoothBlockModel174" or v.Name == "SmoothBlockModel175" or v.Name == "SmoothBlockModel181" or v.Name == "SmoothBlockModel182" or v.Name == "SmoothBlockModel183" or v.Name == "SmoothBlockModel192" or v.Name == "SmoothBlockModel194" or v.Name == "SmoothBlockModel195" or v.Name == "SmoothBlockModel199" or v.Name == "SmoothBlockModel204" or v.Name == "SmoothBlockModel206" or v.Name == "SmoothBlockModel212" or v.Name == "SmoothBlockModel217" or v.Name == "SmoothBlockModel228" or v.Name == "SmoothBlockModel24" or v.Name == "SmoothBlockModel27" or v.Name == "SmoothBlockModel35" or v.Name == "SmoothBlockModel4" or v.Name == "SmoothBlockModel43" or v.Name == "SmoothBlockModel45" or v.Name == "SmoothBlockModel46" or v.Name == "SmoothBlockModel50" or v.Name == "SmoothBlockModel53" or v.Name == "SmoothBlockModel57" or v.Name == "SmoothBlockModel60" or v.Name == "SmoothBlockModel64" or v.Name == "SmoothBlockModel65" or v.Name == "SmoothBlockModel66" or v.Name == "SmoothBlockModel7" or v.Name == "SmoothBlockModel71" or v.Name == "SmoothBlockModel73" or v.Name == "SmoothBlockModel82" or v.Name == "SmoothBlockModel83" or v.Name == "SmoothBlockModel89" or v.Name == "SmoothBlockModel99" then
								colorAPI.color(v, WANDDC) -- Default is "Dark orange"
							end -- House windows and door outlines
						
							if v.Name == "SmoothBlockModel1" or v.Name == "SmoothBlockModel3" or v.Name == "SmoothBlockModel5" or v.Name == "SmoothBlockModel9" then
								colorAPI.color(v, stairsC) -- Default is "Dark stone grey"
							end -- House Stairs
						
							if v.Name == "SmoothBlockModel112" then
								colorAPI.color(v, floorC) -- Default is "Medium blue"
							end -- House floor
						
							if v.Name == "SmoothBlockModel52" or v.Name == "SmoothBlockModel97" then
								colorAPI.color(v, rooftsC) -- Default is "Reddish brown"
							end -- House roof thingys
						
							if v.Name == "SmoothBlockModel160" or v.Name == "SmoothBlockModel162" or v.Name == "SmoothBlockModel165" or v.Name == "SmoothBlockModel178" then
								colorAPI.color(v, chiC) -- Default is "Sand red"
							end -- Chi top part
					end)()
				end
		end
		
		colorAPI.colorBuildingBricks = function(arg)
				local DarkStoneGrey = arg.DarkStoneGrey
				local DeepBlue = arg.DeepBlue
				local NY = arg.NY
				local IW = arg.IW
				local LimeGreen = arg.LimeGreen
				local MSG = arg.MSG
				local RB = arg.RB
				local RR = arg.RR
				local TP = arg.TP
				
				-------------------------------------------------------------------- Building Bricks --------------------------------------------------------------------
			  
				for i,v in pairs(game.Workspace.Terrain["_Game"].Workspace["Building Bricks"]:GetChildren()) do
					coroutine.wrap(function()
						if v.Name == "Part29" or v.Name == "Part31" or v.Name == "Part55" then
							colorAPI.color(v, DarkStoneGrey) -- Default is "Dark stone grey"
						end
						
						if v.Name == "Part11" or v.Name == "Part18" or v.Name == "Part25" or v.Name == "Part3" or v.Name == "Part43" then
							colorAPI.color(v, DeepBlue) -- Default is "Deep blue"
						end
						
						if v.Name == "Part12" or v.Name == "Part15" or v.Name == "Part24" or v.Name == "Part44" or v.Name == "Part6" then
							colorAPI.color(v, NY) -- Default is "New Yeller"
						end
						
						if v.Name == "Part13" or v.Name == "Part21" or v.Name == "Part23" or v.Name == "Part7" then
							colorAPI.color(v, IW) -- Default is "Institutional white"
						end
						
						if v.Name == "Part17" or v.Name == "Part26" or v.Name == "Part38" or v.Name == "Part9" or v.Name == "Part5" then
							colorAPI.color(v, LimeGreen) -- Default is "Lime green"
						end
						
						if v.Name == "Part30" or v.Name == "Part32" or v.Name == "Part33" or v.Name == "Part34" or v.Name == "Part35" or v.Name == "Part36" or v.Name == "Part39" or v.Name == "Part40" or v.Name == "Part41" or v.Name == "Part42" or v.Name == "Part46" or v.Name == "Part47" or v.Name == "Part48" or v.Name == "Part49" or v.Name == "Part50" or v.Name == "Part51" or v.Name == "Part52" or v.Name == "Part53" or v.Name == "Part54" or v.Name == "Part56" or v.Name == "Part57" or v.Name == "Part58" or v.Name == "Part59" or v.Name == "Part60" or v.Name == "Part61" then
							colorAPI.color(v, MSG) -- Default is "Medium Stone grey"
						end
						
						if v.Name == "Part14" or v.Name == "Part19" or v.Name == "Part2" or v.Name == "Part27" then
							colorAPI.color(v, RB) -- Default is "Really black"
						end
						
						if v.Name == "Part1" or v.Name == "Part10" or v.Name == "Part16" or v.Name == "Part22" or v.Name == "Part37" then
							colorAPI.color(v, RR) -- Default is "Really red"
						end
						
						if v.Name == "Part20" or v.Name == "Part28" or v.Name == "Part4" or v.Name == "Part45" or v.Name == "Part8" then
							colorAPI.color(v, TP) -- Default is "Toothpaste"
						end
					end)()
				end
		end
		
		-------------------------------------------------------------------- BASIC API STUFF HERE --------------------------------------------------------------------
				coroutine.wrap(function()
					colorAPI.colorHouse({
						wallsC = colorAPI.transformToColor3(BrickColor.new(message)),
						baseC = colorAPI.transformToColor3(BrickColor.new(message)),
						roofC = colorAPI.transformToColor3(BrickColor.new(message)),
						WANDDC = colorAPI.transformToColor3(BrickColor.new(message)),
						stairsC = colorAPI.transformToColor3(BrickColor.new(message)),
						floorC = colorAPI.transformToColor3(BrickColor.new(message)),
						rooftsC = colorAPI.transformToColor3(BrickColor.new(message)),
						chiC = colorAPI.transformToColor3(BrickColor.new(message))
					})
				end)()
			task.spawn(function()
			colorAPI.colorBuildingBricks({
				DarkStoneGrey = colorAPI.transformToColor3(BrickColor.new(message)),
				DeepBlue = colorAPI.transformToColor3(BrickColor.new(message)),
				NY = colorAPI.transformToColor3(BrickColor.new(message)),
				IW = colorAPI.transformToColor3(BrickColor.new(message)),
				LimeGreen = colorAPI.transformToColor3(BrickColor.new(message)),
				MSG = colorAPI.transformToColor3(BrickColor.new(message)),
				RB = colorAPI.transformToColor3(BrickColor.new(message)),
				TP = colorAPI.transformToColor3(BrickColor.new(message)),
				RR = colorAPI.transformToColor3(BrickColor.new(message))
			})
		end)
		
				colorAPI.color(game.Workspace.Terrain["_Game"].Admin["Regen"], colorAPI.transformToColor3(BrickColor.new(message)))
				colorAPI.color(game.Workspace.Terrain["_Game"].Workspace["Baseplate"], colorAPI.transformToColor3(BrickColor.new(message)))
				task.spawn(function()
					colorAPI.colorObbyBox(colorAPI.transformToColor3(BrickColor.new(message)))
				end)
				task.spawn(function()
					colorAPI.colorObbyBricks(colorAPI.transformToColor3(BrickColor.new(message)))
				end)
				task.spawn(function()
					colorAPI.colorAdminDivs(colorAPI.transformToColor3(BrickColor.new(message)))
				end)
				task.spawn(function()
					colorAPI.colorPads(colorAPI.transformToColor3(BrickColor.new(message)))
				end)
		task.wait(0.25)
			end)
		end

        function move_part(part, new)
            if not part then return end
            if part.ReceiveAge ~= 0 then return end
            part.Velocity = Vector3.new(31.30, 51.64, 34.1 + vis.angle/10000)
            part.Massless = true
            part.CanCollide = false
            part.Anchored = true
            part.CFrame = part.CFrame:Lerp(new, 0.175)
            task.wait()
            part.Anchored = false
        end

        spawn(function()
            for i,v in pairs(game.Players:GetChildren()) do
                v.Backpack.ChildAdded:connect(function(item)
if table.find(blacklistedGears,item.Name) and not table.find(GearWhitelisted,v.Name) then
    chatshit("ungear/"..v.Name)
    chatshit("ungear/others")
    chatshit("ungear/"..v.Name)
    chatshit("ungear/others")
    chatshit("ungear/"..v.Name)
    chatshit("ungear/others")
end
end)
end
end)

vis = {
	queue = false,
	active = false,
	amount = 12,
	size = '5/2/1',
	orbiter = lp,
	-- parts = {},
	angle = 0,
	speed = 0.01,
	mode = 3,
	velocity = 31.0042,
	modes = {},
	paints = {},
	paint = 'solid',
	radius = 10,
	solid = Color3.fromRGB(64, 128, 255),
	mind = 10,
	append = 0,
	debounce = false,
	var = 5,
	sinangle = 0,
	sinspeed = 0.01,
	freq = 2,
	amp = 5,
	sensitivity = 0.02
}

vis.modes[1] = function()
	for i, v in pairs(collection_service:GetTagged('Vis_Part')) do
		if not v or v.Parent == nil then
			execute('revis')
			return
		end
		
		coroutine.wrap(function()
		    local angle = i * ((2 * math.pi) / vis.amount) + vis.angle
		    local x, z = getxz(angle, vis.mind)
		    
		    local cframe = (vis.orbiter.Character.HumanoidRootPart.CFrame * CFrame.new(x, 0, z)).p
		    local lookAt = vis.orbiter.Character.HumanoidRootPart.Position
		    
		    move_part(v, CFrame.new(cframe, lookAt))
		end)()
	end
end

--// Also a spinning circle but with vertically spinning parts
vis.modes[2] = function()
	for i, v in pairs(collection_service:GetTagged('Vis_Part')) do
		coroutine.wrap(function()
			if not v or v.Parent == nil then
				execute('revis')
				return
			end
		
		    local angle = i * ((2 * math.pi) / vis.amount) + vis.angle
		    local x, z = getxz(angle, vis.mind)
		    
		    local cframe = (vis.orbiter.Character.HumanoidRootPart.CFrame * CFrame.new(x, 0, z)).p
		    local lookAt = vis.orbiter.Character.HumanoidRootPart.Position
		    
		    move_part(v, CFrame.new(cframe, lookAt) * CFrame.Angles(0, vis.angle, 0))
		end)()
	end
end

--// Also a spinning circle but with horizontally spinning parts (x axis)
vis.modes[3] = function()
	if #collection_service:GetTagged('Vis_Part') == 0 then
		execute('revis')
		return
	end
	for i, v in pairs(collection_service:GetTagged('Vis_Part')) do
		coroutine.wrap(function()
		    local angle = i * ((2 * math.pi) / vis.amount) + vis.angle
		    local x, z = getxz(angle, vis.mind)
		    
		    local cframe = (vis.orbiter.Character.HumanoidRootPart.CFrame * CFrame.new(x, 0, z)).p
		    local lookAt = vis.orbiter.Character.HumanoidRootPart.Position
		    
		    move_part(v, CFrame.new(cframe, lookAt) * CFrame.Angles(vis.angle, 0, 0))
		end)()
	end
end

--// Also a spinning circle but with horizontally spinning parts (z axis)
vis.modes[4] = function()
	for i, v in pairs(collection_service:GetTagged('Vis_Part')) do
		coroutine.wrap(function()
			if not v or v.Parent == nil then
				execute('revis')
				return
			end
		
		    local angle = i * ((2 * math.pi) / vis.amount) + vis.angle
		    local x, z = getxz(angle, vis.mind)
		    
		    local cframe = (vis.orbiter.Character.HumanoidRootPart.CFrame * CFrame.new(x, 0, z)).p
		    local lookAt = vis.orbiter.Character.HumanoidRootPart.Position
		    
		    move_part(v, CFrame.new(cframe, lookAt) * CFrame.Angles(0, 0, vis.angle))
		end)()
	end
end

--// Test with math.sin
vis.modes[5] = function()
	for i, v in pairs(collection_service:GetTagged('Vis_Part')) do
		coroutine.wrap(function()
			if not v or v.Parent == nil then
				execute('revis')
				return
			end
		
		    local angle = i * ((2 * math.pi) / vis.amount) + vis.angle
		    local x, z = getxz(angle, vis.mind)
		    
		    local cframe = (vis.orbiter.Character.HumanoidRootPart.CFrame * CFrame.new(x, 0, z)).p
		    local lookAt = vis.orbiter.Character.HumanoidRootPart.Position
		    local var = math.sin(vis.angle * vis.freq + i * 0.5) * vis.amp
		    local var = math.sin(vis.var * vis.freq * i * 0.5) * vis.amp
		    
		    move_part(v, CFrame.new(cframe + Vector3.new(0, var, 0)), lookAt)
		end)()
	end
end

-- Visualizer paints
vis.paints['hue'] = function()
	for i, v in pairs(collection_service:GetTagged('Vis_Part')) do
		colorAPI.color(v, Color3.fromHSV(glob.hue, 1, 1))
	end
end

vis.paints['reactive'] = function()
	if not _game.Folder:FindFirstChild('Sound') then return end
	
	local s = _game.Folder:FindFirstChild('Sound') 
	
	for i, v in pairs(collection_service:GetTagged('Vis_Part')) do
		colorAPI.color(v, Color3.fromRGB(s.PlaybackLoudness, 128, 255))
	end
end

vis.paints['solid'] = function()
	for i, v in pairs(collection_service:GetTagged('Vis_Part')) do
		colorAPI.color(v, vis.solid)
	end
end


spawn(function()
    while wait() do
    for i,v in pairs(game.Players:GetChildren()) do
        v.Backpack.ChildAdded:connect(function(item)
if table.find(gearbl,v.Name) and not table.find(GearWhitelisted,v.Name) then
    chatshit("ungear/ "..v.Name)
end
end)
end
end
end)

            


			function giveaura()
				game.Players:Chat("gear me 287426148")
				game.Players:Chat("gear me 287426148")
				looping = true
				while looping do wait(0.01)
				for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
					if v:IsA("Tool") then
						v.Parent = game.Players.LocalPlayer.Character
						wait()
						v.Parent = game.Players.LocalPlayer.Backpack
						wait()
						v.Parent = game.Players.LocalPlayer.Character
						wait()
						looping = false
						numberto = true
						while numberto do wait(0.002)
			v:Destroy()
			v:Destroy()
			numberto = false
						end
						
					end
				end
			end
			end

            local function movep(part, coords)
                pcall(
                    function()
                        chatshit("gear me 00000000000000000000000000000000000000000000108158379")
                        repeat
                            task.wait()
                        until game.Players.LocalPlayer.Backpack:FindFirstChild("IvoryPeriastron")
                        game.Players.LocalPlayer.Backpack.IvoryPeriastron.Parent = game.Players.LocalPlayer.Character
                        for i, v in pairs(workspace:GetDescendants()) do
                            if v:IsA("Part") then
                                v.CanCollide = false
                            end
                        end
                        workspace.Gravity = 0
                        game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                            coords *
                            CFrame.new(-1 * (part.Size.X / 2) - (game.Players.LocalPlayer.Character["Torso"].Size.X / 2), 0, 0)
                        task.wait(.3)
                        game.Players.LocalPlayer.Character.IvoryPeriastron.Remote:FireServer(Enum.KeyCode.E)
                        repeat
                            task.wait()
                        until game.Workspace.Camera:FindFirstChild("FakeCharacter")
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                            part.CFrame *
                            CFrame.new(-1 * (part.Size.X / 2) - (game.Players.LocalPlayer.Character["Torso"].Size.X / 2), 0, 0)
                        task.wait()
                        Loops.upmover = true
                        repeat
                            task.wait()
                            game.Players:Chat("unpunish me me me")
                        until game.Players.LocalPlayer.Character.Torso:FindFirstChild("Weld") or not Loops.upmover
                        game.Players.LocalPlayer.Character.IvoryPeriastron.Remote:FireServer(Enum.KeyCode.E)
                        Loops.upmover = false
                        task.wait(0.3)
                        for i, v in pairs(workspace:GetDescendants()) do
                            if v.Name ~= "Rocket" and v.Name ~= "Addon" and v:IsA("BasePart") then
                                v.CanCollide = true
                            end
                        end
                        workspace.Gravity = 196.2
                        game.Players:Chat("respawn me")
                    end
                )
            end
function Chat(msg)
game.Players:Chat(msg)
end


loadstring(game:HttpGet("https://raw.githubusercontent.com/trollfacenan/random-kah-scripts/main/ColorAPI.lua"))()


function dcrash()
for i = 1, 50 do
   chatshit("dog all all all")
end
for i = 1, 50 do
   chatshit("clone all all all")
end
while task.wait() do
   chatshit("clone all all all")
end
end
function chatshit(msg)
game.Players:Chat(msg)
end
function hint(message)
if not message then
	return
end
chatshit("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n" ..message)
end

local function col(part, c1, c2, c3)
pcall(
	function()
		local args = { [1] = "PaintPart", [2] = {["Part"] = part, ["Color"] = Color3.fromRGB(c1, c2, c3)}}
		spawn(
			function()
				workspace[game:GetService("Players").LocalPlayer.Name]:WaitForChild("PaintBucket"):WaitForChild("Remotes").ServerControls:InvokeServer(
					unpack(args)
				)
			end
		)
	end
)
end

function rkick(plr)
    local plr = v.Name
    game.Players:Chat("respawn "..v.Name)
wait(.35)
chatshit("size me nan")
                    chatshit("size "..v.Name.." nan")
                    chatshit("ff "..v.Name)
                    chatshit("speed "..v.Name.." 0")
                    chatshit("setgrav "..v.Name.." 1000")  
                    wait(.35)
                    chatshit("jail/"..v.Name)
                local a = true
                if a then
                    for i=1,400 do
                        chatshit("rocket/me/me/me")
                        chatshit("rocket/"..v.Name.."/"..v.Name.."/"..v.Name)
                end
                a=not a
            end
            wait(0.333)
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(6)
            game.Players.LocalPlayer.Character.Animate:Destroy()
            for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do v:Stop()end
                            
            local timer = os.clock()
        local a = true
                repeat game:GetService("RunService").RenderStepped:Wait()
                spawn(function()
                for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v.Name == "Rocket" then v.CanCollide = false end
                end
                for i,v in pairs(v.Character:GetChildren()) do
                    if v.Name == "Rocket" then v.CanCollide = false end
                end
                    --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,1)*CFrame.Angles(0,math.rad(math.random(0,360)),0) * CFrame.new(0,0,-1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(180),0)*CFrame.new(0,0,-2)
                for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    pcall(function()
                        v.Velocity = Vector3.new(0,0,0)
                        v.RotVelocity = Vector3.new(0,0,0)
                    end)
                end
                if a then
                    game.Players:Chat("rocket/me/me/me")
                    else
                        game.Players:Chat("rocket/"..v.Name.."/"..v.Name.."/"..v.Name)
                    end
                    a=not a
                end)
                until os.clock()-timer>30 or not v
                game.Players:Chat("respawn me")
                wait(.35)
                chatshit("reload "..v.Name)
                wait(0.333)
            end


function say(msg) game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All") end



local function clearLogs()
	for i=1,20 do
		local charset = {"darc", "Darcv3", "darchub.site", "v1", "ontop", "Darcv3ontop", "ahhdaddy", "nologz", "L", "nologgiesforyou", "dontleaveyet:))", "kicksexist", "epicantis", "nokickingforyou", "noskiddies", "skiddingL", "logznomore", "pqkowashere", "iwasstillhere", "#", "{", "}", "?", "+", "="}
		local ch2 = {"#", "{", "}", "!", "'", "@", ":", ";"}
		local fakecommands = {"ff {}{}{}{}{}{}{}", "kill {}{}{}{}", "punish {}{}{}{}{}{}", "ff |||||||||||||||||"}
		local f = ""
		local z = ""
		local b = ""
		for i=1,20 do
			f = f .. charset[math.random(1, #charset)]
		end
		for i=1,50 do
			z = z .. ch2[math.random(1, #ch2)]
		end
		for i=1,10 do
			b = b .. fakecommands[math.random(1, #fakecommands)]
		end
		chatshit("ff " .. f .. tostring(math.random(1, 1000)) .. "\n" .. f .. tostring(math.random(1, 1000)) .. "\n" .. f .. tostring(math.random(1, 1000)))
		chatshit("ff " .. z .. tostring(math.random(1, 1000)) .. "\n" .. z .. tostring(math.random(1, 1000)) .. "\n" .. z .. tostring(math.random(1, 1000)))
		chatshit("ff " .. b .. tostring(math.random(1, 1000)) .. "\n" .. b .. tostring(math.random(1, 1000)) .. "\n" .. b .. tostring(math.random(1, 1000)))
	end
end


--Custom Notification
local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
local state = false

function option(text, color, time, callback)
   Notification:Notify(
	  { Title = "Singularity X", Description = text },
	  { OutlineColor = color, Time = time, Type = "option" },
	  {
		 Image = "rbxassetid://13235545069",
		 ImageColor = Color3.fromRGB(52, 50, 201),
		 Callback = function(State)
			state = State
			callback(state)
		 end
	  }
   )
end

function notif(text, color, time)
   Notification:Notify(
	  { Title = "Singularity X", Description = text },
	  { OutlineColor = color, Time = time, Type = "Default" }
   )
end

--//Get player function

    local function gpfs(str)
        for i, v in pairs(game.Players:GetPlayers()) do
            if str:lower() == "me" then
                return game.Players.LocalPlayer
            end
            if str:lower() == (v.Name:lower()):sub(1, #str) or str:lower() == (v.DisplayName:lower()):sub(1, #str) then
                return v
            end
        end
    end

    game.Players.LocalPlayer.Chatted:Connect(function(msg)
        local split = msg:split(" ")
        --
        local args = msg:split(" ")

        if split[1] == prefix.."cmds" then
            print("- hint (msg)")
            print("- rlag (player)")
            print("- shutdown")
            print("- vgc/vgcrash")
            print("- silcrash")
            print("- rwalls")
            print("- nok")
            print("- unnok")
            print("- floathead")
            print("- gwl (player)")
            print("- gban (player)")
            print("- unwhitelist (player)")
            print("- fixvel")
            print("- antihat")
            print("- antiabuse")
            print("- antipunish")
            print("- antidog")
            print("- antikick")
            print("- res")
            print("- antisound (FE)")
            print("- removesound (client)")
            print("- antitime")
            print("- moveregen")
            print("- fixregen")
            print("- robby")
            print("- unrobby")
            print("- bring (player)")
            print("- ref (player)")
            print("- goto (player)")
            print("- fixbp")
            print("- movebp")
            print("- antir")
            print("- ping")
            print("- antikill")
            print("- cagespawn")
            print("- fixgrass")
            print("paintall (Color)")
            print("- hfix")
            print("- biglogs")
            print("- superbox")
            print("- clrlogs")
            print("- aura")
        end
        if split[1] == prefix.."hint" then
                if not split[2] then
                    return  log_file("[hint]: Missing arg",notif("Your missing a arg (Message)", Color3.fromRGB(160, 32, 240), 5))
                end
                local result = table.concat(split, " ", 2, #split)
                hint("\n\n\n\n\n\n\n" ..result)
        end

        if split[1] == prefix.."rwalls" then
            for i,v in pairs(game.Workspace:GetDescendants()) do
                if v.Name == "Back Wall" then 
                    v.CanCollide = false
                end
                 if v.Name == "Right Wall" then 
                    v.CanCollide = false
                end
                 if v.Name == "Left Wall" then 
                    v.CanCollide = false
                end
                 end
        end

        

        if split[1] == prefix.."fixvel" then
            for i,v in pairs(workspace.Terrain["_Game"]:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.Velocity = Vector3.new(0,0,0)
                end
            end
        end

        if split[1] == prefix.."antihat" then
            antihat = true
    repeat game:GetService("RunService").RenderStepped:Wait()
        for i,v in pairs(workspace:GetDescendants()) do
            if v:IsA("Accessory") and v.Name == "Accessory (Pointy)" or v.Name == "Accessory (happy)" or v.Name == "Accessory (SUN)" then
                v:Destroy()
            end
        end
    until not antihat 
        end

        if split[1] == prefix.."antipunish" then
            AntiPunish = true
            repeat game:GetService("RunService").RenderStepped:Wait()
            if game.Lighting:FindFirstChild(game.Players.LocalPlayer.Name) then
                chatshit("reload me")
            end
        until not AntiPunish
    end

if split[1] == prefix.."antiabuse" then
    AntiAbuse = true
    repeat game:GetService("RunService").RenderStepped:Wait()
        if lp.PlayerGui:FindFirstChild("EFFECTGUIBLIND") then
            lp.PlayerGui:FindFirstChild("EFFECTGUIBLIND"):Destroy()
        end
            if game.Lighting:FindFirstChild(game.Players.LocalPlayer.Name) then
                chatshit("reload me")
            end
            if lp.Character.Humanoid and lp.Character.Humanoid.Health == 0 then
                chatshit("reset me")
            end
    until not AntiAbuse
end

if split[1] == prefix.."unantiabuse" then
Antiabuse = false
end


    if split[1] == prefix.."antikick" then
        antikick = true
        repeat game:GetService("RunService").RenderStepped:Wait()
        for i,v in pairs(chr:GetChildren()) do if v.Name=="Rocket" then v:Destroy() end end
        chatshit("unrocket/me")
    until not antikick
    end

    if split[1] == prefix.."antidog" then
        Loops.antidog = true
        repeat
            task.wait(.1)
            for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if v:IsA("Seat") then
                    game.Players:Chat("undog me")
                end
            end
        until not antidog
    end

    if split[1] == prefix.."unantipunish" then
        AntiPunish = false
    end

        if split[1] == prefix.."floathead" then
            game.Players:Chat("size me .3")
        game.Players:Chat("bighead me")
        game.Players:Chat("unsize me")
        end

        if split[1] == prefix.."res" then
            local Cframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        game.Players:Chat('unchar me')
        wait(.19)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Cframe
        end

        if split[1] == prefix.."unantihat" then
            antihat = false
        end

        local gwled

        if split[1] == prefix.."gwl" then
            local v = gpfs(split[2])
            if v == "false" then
                return notif("Your missing a arg (Player)", Color3.fromRGB(160, 32, 240), 5)
            end
            if gwled == true then
                return
            else
            gwled = true
            table.insert(GearWhitelisted,v.Name)
            table.remove(gearbl,table.find(gearbl,v.Name))
            say("[Singularity X]:Gear whitelisted "..v.Name)
            gwled = false
            log_file("gear whitelisted "..v.Name)
        end
    end

    if split[1] == prefix.."antisound" then
        antisound = true
        repeat game:GetService("RunService").RenderStepped:Wait()
            if Kohls.Folder:FindFirstChild("Sound") then
                chatshit("clr")
                kohls.Folder:FindFirstChild("Sound"):Destroy()
                task.wait(0.3)
            end
        until not antisound
    end

    if split[1] == prefix.."unantisound" then
        antisound = false
    end

    if split[1] == prefix.."removesound" then
        removesound = true
        repeat game:GetService("RunService").RenderStepped:Wait()
            if Kohls.Folder:FindFirstChild("Sound") then
                kohls.Folder:FindFirstChild("Sound"):Destroy()
    end
until not removesound
end

if split[1] == prefix.."unremovesound" then
    removesound = false
end

if split[1] == prefix.."vis" then
    vis.active = true
			vis.queue = true
			
			local padding = '.'
			local found = false
			
			for _, v in pairs(string.split(string.split(vis.size, '/')[3], '')) do
				if v == '.' then
					found = true
					break
				end
			end
			
			if found then
				padding = ''
			end
			
			local padding = '021'
			
			for i = 1, vis.amount do
				chat('part/' .. vis.size .. padding)
				task.wait(0.1)
			end
			
			chat('gear me 18474459')
			
			coroutine.wrap(function()
				while
					vis.active
					and threads['PreRender']
				do
					vis.paints[vis.paint]()
					task.wait(0.045)
				end
			end)()
        end

    if split[1] == prefix.."antitime" then
        antitime = true
        repeat game:GetService("RunService").RenderStepped:Wait()
        if Lighting.ClockTime == 14 then else
            chatshit("time 14")
            Lighting.ClockTime = 14
    end
until not antitime
end

if split[1] == prefix.."unantitime" then
    antitime = false
end

    local ungwled
        if split[1] == prefix.."ungwl" then
            local v = gpfs(split[2])
            if v == "false" then
                return notif("Your missing a arg (Player)", Color3.fromRGB(160, 32, 240), 5)
            end
            if ungwled == true then
                return
            else
                ungwled = true
                table.remove(whitelist,table.find(whitelist,v.Name))
            say("[Singularity X]:UnWhitelisted "..v.Name)
            log_file("Unwhitelisted "..v.Name)
            gwled = false
        end
    end

    if split[1] == prefix.."gban" then
        local v = gpfs(split[2])
        if v == "false" then
            return notif("Your missing a arg (Player)", Color3.fromRGB(160, 32, 240), 5)
        end
        table.insert(gearbl,v.Name)
        wait(.25)
        say("[Singularity X]:Gear banned "..v.Name)
        log_file("gear banned whitelisted "..v.Name)
    end

    if split[1] == prefix.."aura" then
        giveaura()
    end

        if split[1] == prefix.."antir" then
            AntiRocket = true
        end

        if split[1] == prefix.."moveregen" then
            movep(game:GetService("Workspace").Terrain["_Game"].Admin.Regen, CFrame.new(Vector3.new(24175, 1000000, 233)))
        end

        if split[1] == prefix.."fixregen" then
            movep(game:GetService("Workspace").Terrain["_Game"].Admin.Regen,CFrame.new(-7.16500044, 5.42999268, 94.7430038, 0, 0, -1, 0, 1, 0, 1, 0, 0))
        end

        if split[1] == prefix.."fixbp" then
            if workspace.Terrain._Game.Workspace:FindFirstChild("Baseplate") then
                movep(
                    workspace.Terrain._Game.Workspace.Baseplate,
                    CFrame.new(0, 0.100000001, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                )
            else
                print("Baseplate Not Loaded!")
            end
        end

        if split[1] == prefix.."movebp" then
            if workspace.Terrain._Game.Workspace:FindFirstChild("Baseplate") then
                movep(
                    workspace.Terrain._Game.Workspace.Baseplate,
                    CFrame.new(Vector3.new(24175, 1000000, 233)))
            else
                print("Baseplate Not Loaded!")
            end
        end

        if split[1] == prefix.."cagespawn" then
            movep(workspace.Terrain._Game.Workspace["Basic House"].SmoothBlockModel40, CFrame.new(-38.314312, 31.3491211, -19.8837395, 0.999993742, 0.00250258623, -0.00250259414, -0.00250258623, -6.19888306e-06, -0.999996841, -0.00250259414, 0.999996841, 5.96046448e-08))
        end

        if split[1] == prefix.."fixgrass" then
            movep(workspace.Terrain._Game.Workspace["Basic House"].SmoothBlockModel40, CFrame.new(-30.0650005, 1.03000009, 72.2430038, 1, 0, 0, 0, 1, 0, 0, 0, 1))
        end

        if split[1] == prefix.."clrlogs" then
            clearLogs()
        end

        if split[1] == prefix.."hfix" then
            chatshit("clr")
            chatshit("fix")
            chatshit("unchar all")
            chatshit("fixgrass")
        end

        if split[1] == prefix.."biglogs" then
            game:GetService("Players").LocalPlayer.PlayerGui.ScrollGui.TextButton.Frame.Size = UDim2.new(0,750,0,750)
        end

        if split[1] == prefix.."superbox" then
            for i = 1, 300 do
                game.Players:chat("gear me 00000000000000000000000212641536")-- 1837881688
                end 
                task.wait(.7)
                for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                   coroutine.wrap(function()
                       pcall(function()
                           v.Parent = game.Players.LocalPlayer.Character
                       end)
                   end)()
               end


       
       
        
                       local cf = CFrame.new(Vector3.new(0,-3,0))
        
                        local segments = 100
        
                        
                        local radius = 40
                        local Positions = {}
                        local single = 360/segments
        
                        for i = 1, segments do
                            local angle = single*i
                            local cheating = cf * CFrame.Angles(0,math.rad(angle),0)
                            table.insert(Positions, cheating.Position + cheating.LookVector * radius)
                        end
                        --wait(.7)
                        for i,v in pairs(plr.Character:GetChildren()) do
                            if v:IsA("Tool") then
                            coroutine.wrap(function()
                                pcall(function()
                                    v.GripPos = Positions[i]
                                    task.wait()
                                    v.Parent = plr.Character
                                end)
                            end)()
                        end
                        end
                        for i = 1, #Positions do 
                            table.remove(Positions,i)
                        end    
        end

        if split[1] == prefix.."floattools" then
            active.sbx = false
			
			for l, v in next, lp.Backpack:GetChildren() do
				v.Parent = lp.Character
				local angle = l * ((2 * math.pi) / #lp.Backpack:GetChildren())
				local x, z = getxz(angle, 8)
				local cframe = CFrame.new(x, 0, z).p
				v.GripPos = cframe
			end
			
			local tool = lp.Character:FindFirstChildWhichIsA("Tool")
			tool:GetPropertyChangedSignal("Parent"):Connect(function()
				if not tool or tool.Parent == nil or tool.Parent ~= lp.Character then
					active.sbx = false
				end
			end)
			
			active.sbx = true
		end



        if split[1] == prefix.."ref" then
            local v = gpfs(split[2])
            if v == "false" then
                return notif("Your missing a arg (Player)", Color3.fromRGB(160, 32, 240), 5)
            end
            chatshit("reload "..v.name)
        end

        if split[1] == prefix.."antikill" then
            antikill = true
            repeat game:GetService("RunService").RenderStepped:Wait()
                if lp.Character.Humanoid and lp.Character.Humanoid.Health == 0 then
                    chatshit("reset me")
                end
        until not antikill

        if split[1] == prefix.."ping" then
            local LocalPlayer = game:GetService("Players").LocalPlayer
            local pingInSeconds = game.Players.LocalPlayer:GetNetworkPing()
        local pingInMilliseconds = math.floor(pingInSeconds * 1000 + 0.5)
        wait(1)
say("[Singularity X]:Your current ping is " .. pingInMilliseconds .. "ms")
        end

        if split[1] == prefix.."purge" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(455.448242, 3.63637614, 453.299042, 0.649438977, 6.72485001e-08, 0.760413706, -7.56329328e-08, 1, -2.38416611e-08, -0.760413706, -4.20286135e-08, 0.649438977)
    wait(1)
    chatshit("tp others me")
    chatshit("speed all 0")
    chatshit("setgrav all 10000")
    chatshit("blind others")
    wait(.5)
    for i=1,1000 do
    chatshit("rocket/ all all all "..math.random(1,1000))
    end
    wait(.5)
    chatshit("size all 9.9")
    wait(2)
    for i=1,10 do
    chatshit("tp others me")
    chatshit("unskydive all")--Credits to knocks
    wait(.5)
    end
        end

        if split[1] == prefix.."dpurge" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(455.448242, 3.63637614, 453.299042, 0.649438977, 6.72485001e-08, 0.760413706, -7.56329328e-08, 1, -2.38416611e-08, -0.760413706, -4.20286135e-08, 0.649438977)
    wait(1)
    chatshit("tp others me")
    chatshit("speed all 0")
    chatshit("setgrav all 10000")
    chatshit("blind others")
    wait(.5)
    
    for i=1,500 do
    chatshit("dog/ all all all "..math.random(1,1000))
    end
    wait(.5)
    chatshit("size all 9.9")
    wait(2)
    for i=1,10 do
    chatshit("tp others me")
    chatshit("unskydive all")--Credits to knocks
    wait(.5)
    end
end

        if split[1] == prefix.."prefix" then
            if not split[2] then
                return logn("No #2 Argument found")
            end
            local result = table.concat(split, " ", 2, #split)
            if #split[2] >= 5 then
                return logn("Prefix can't be longer than 5 characters")
            end
                chatshit("-run local configs.prefix =" ..result)
            end
        end

        if split[1] == prefix.."antiafk" then
            local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        end)
    end

    if split[1] == prefix.."spamregen" then
        task.wait(0.1)
        spamreset = true
     while spamreset == true do
         task.wait()
         fireclickdetector(game:GetService("Workspace").Terrain["_Game"].Admin.Regen.ClickDetector, 0)
     end
    end

    if split[1] == prefix.."unspamregen" then
        spamreset = false
    end

if split[1] == prefix.."tempcrash" then
    if not split[2] then
        return log_file("[tempcrash]: Missing arg",notif("Your missing a arg (Seconds)", Color3.fromRGB(160, 32, 240), 5))
    end
    local amount = tonumber(split[2])

    if amount > 20 then
        return logn("Over 20 seconds")
    end
    print(amount)
    tempCrash(amount)
end

if split[1] == prefix.."fixmover" then
    if workspace.Camera:FindFirstChild("FakeCharacter") then
        workspace.Camera.FakeCharacter:Destroy()
    end
    Loops.upmover = false
    for i, v in pairs(workspace:GetDescendants()) do
        if v.Name ~= "Rocket" and v.Name ~= "Addon" and v:IsA("BasePart") then
            v.CanCollide = true
        end
    end
    workspace.Gravity = 196.2
    chatshit("respawn me")
    chatshit(prefix.."rwalls")
end

if split[1] == prefix.."clearcache" then
    if not isfile('SinX/cache.txt') then
        logn('clearcache: no cache found')
        return
        print("hi")
    end
    
    local lines = string.split(readfile('SinX/cache.txt'), '\n')
    local json = game:GetService("HttpService"):JSONEncode(lines)

    writefile('SinX/cache.txt', '')
    logn(string.format('Cleared cache of %.2f kb', (#json/1024)))
end

        if split[1] == prefix.."paintall" then
                if not split[2] then
                    return
                    log_file("[paintall]: Missing arg",notif("Your missing a arg (Color)", Color3.fromRGB(160, 32, 240), 5))
                end

            local message = split[2]
            paintmap(message)
        end

        if split[1] == prefix.."unload" then
            for i,v in pairs(Connections) do v:Disconnect()
                for i,v in pairs(Loops) do Loops[i]=false end
        end
    end

    if split[1] == prefix.."robby" then
        workspace.Terrain["_Game"]["Workspace"].Obby.Parent = game.Chat
    workspace.Terrain["_Game"]["Workspace"]["Obby Box"].Parent = game.Chat
    end

    if split[1] == prefix.."unrobby" then
        game.Chat:FindFirstChild("Obby").Parent = workspace.Terrain["_Game"]["Workspace"]
    game.Chat:FindFirstChild("Obby Box").Parent = workspace.Terrain["_Game"]["Workspace"]
    end
        if split[1] == prefix.."fixcam" then
            local lp = game.Players.LocalPlayer
            local ui = game:GetService("UserInputService")
            local contextActionService = game:GetService("ContextActionService")
            local runService = game:GetService("RunService")
            
            contextActionService:UnbindAction("ShoulderCameraSprint")
            runService:UnbindFromRenderStep("ShoulderCameraUpdate")
            contextActionService:UnbindAction("ShoulderCameraZoom")
            
            while true do
                wait()
                
                repeat
                    runService.Heartbeat:Wait()
                until game.Workspace.CurrentCamera.CameraType == Enum.CameraType.Scriptable
            
                runService:UnbindFromRenderStep("ShoulderCameraUpdate")
                contextActionService:UnbindAction("ShoulderCameraZoom")
                contextActionService:UnbindAction("ShoulderCameraSprint")
            
                local weaponSystem = game:GetService("ReplicatedStorage"):FindFirstChild('WeaponsSystem')
                if not weaponSystem then
                    return
                end
            
                for _, v in pairs(weaponSystem:GetDescendants()) do
                    if v:IsA("Script") then
                        v.Disabled = true
                    end
                    v:Destroy()
                end
            
                local weaponScript = lp.PlayerGui:FindFirstChild("ClientWeaponsScript")
                local weaponGui = lp.PlayerGui:FindFirstChild("WeaponsSystemGui")
                local clientWeaponScript = lp.PlayerScripts:FindFirstChild("ClientWeaponsScript")
            
                if weaponScript then
                    weaponScript.Disabled = true
                    weaponScript:Destroy()
                end
            
                if weaponGui then
                    weaponGui:Destroy()
                end
            
                if clientWeaponScript then
                    clientWeaponScript.Disabled = true
                    clientWeaponScript:Destroy()
                end
            
                game:GetService("UserInputService").MouseBehavior = Enum.MouseBehavior.Default
                ui.MouseIconEnabled = true
                lp.CameraMaxZoomDistance = 400
                lp.CameraMinZoomDistance = 0.5
            
                local camera = game:GetService("Workspace"):FindFirstChild("Camera")
                if camera then
                    camera.FieldOfView = 70
                end
            
                game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
                game.Workspace.CurrentCamera.CameraSubject = lp.Character.Humanoid
                lp.Character.Humanoid.AutoRotate = true
            end
end

        if split[1] == prefix.."bring" then
            local v = gpfs(split[2])
            if v == "false" then
                return 
            end
            chatshit("tp "..v.Name.." me")
        end

        if split[1] == prefix.."silcrash" then
            option("Are you sure you want to crash this server?", Color3.fromRGB(255, 255, 255), 2000000000, function(state)
                if state then
                    local time = math.floor( ( tick() - start_time ) * 1000 )
                    log_file("[Server Crash]: Server crashed in "..time.."ms")
            notif("Server crashed in "..time.."ms", Color3.fromRGB(160, 32, 240), 5)
                    scrash()
                else
                    print("Did not crash")
                end
            end)
        end

        if split[1] == prefix.."dcrash" then
            option("Are you sure you want to crash this server?", Color3.fromRGB(255, 255, 255), 2000000000, function(state)
                if state then
                    local time = math.floor( ( tick() - start_time ) * 1000 )
                    log_file("[Server Crash]: Server crashed in "..time.."ms")
            notif("Server crashed in "..time.."ms", Color3.fromRGB(160, 32, 240), 5)
                    dcrash()
                else
                    print("Did not crash")
                end
            end)
        end

        if split[1] == prefix.."vgcrash" or split[1] == prefix.."vgc" then
            chatshit("gear me 00000000000000094794847")
            repeat task.wait() until game.Players.LocalPlayer.Backpack:WaitForChild("VampireVanquisher")
            local vg = game.Players.LocalPlayer.Backpack:FindFirstChild("VampireVanquisher")
            vg.Parent = game.Players.LocalPlayer.Character
            task.wait(0.2)
            vg:Activate()
            wait(.15)
            for i = 1,100 do
                chatshit("unsize me me me")
            end
            local time = math.floor( ( tick() - start_time ) * 1000 )
            log_file("[Server Crash]: Server crashed in "..time.."ms")
            notif("Server crashed in "..time.."ms", Color3.fromRGB(160, 32, 240), 5)
        end

        if split[1] == prefix.."shutdown" then
            chatshit("m/ \n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n Singularity X: Server shutdown by Singularity X\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n\n \n \n")
            task.wait(.25)
            local time = math.floor( ( tick() - start_time ) * 1000 )
            log_file("[Server Crash]: Server crashed in "..time.."ms")
            notif("Server crashed in "..time.."ms", Color3.fromRGB(160, 32, 240), 5)
            scrash()
                end

        if split[1] == prefix.."iy" then
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
            say("[Singularity X]:infinite yield Loaded")
        end

        if split[1] == prefix.."house" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-18.3, 8.3, 60.6))
        end

        if split[1] == prefix.."spawn" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-41, 4, -24)
        end

        if split[1] == prefix.."antivoid" then
            antivoid = true
            repeat game:GetService("RunService").RenderStepped:Wait()
            until not antivoid
                if Rootlp.CFrame.Y < 0 then
                    chatshit(prefix.."spawn")
                end
            end
        if split[1] == prefix.."antigban" then
            game:GetService("CoreGui").RobloxGui.Backpack:GetPropertyChangedSignal("Visible"):Connect(function()
                if not game:GetService("CoreGui").RobloxGui.Backpack.Visible then
                    game:GetService("CoreGui").RobloxGui.Backpack.Visible = true
                end
            end)
            game:GetService("CoreGui").RobloxGui.Backpack.Visible = true
        end

        if split[1] == prefix.."fregen" then
            local root = game.Players.LocalPlayer.Character.HumanoidRootPart
                root.Anchored = true
                repeat
                task.wait()
                root.CFrame = CFrame.new(-7.165, root.Position.Y + 2500 , 94.743)
                until workspace.Terrain._Game.Admin:FindFirstChild("Regen")
                root.Anchored = false
                root.CFrame = workspace.Terrain._Game.Admin:FindFirstChild("Regen").CFrame + Vector3.new(0, 3, 0)
        end

        if split[1] == prefix.."regen" then
            fireclickdetector(game:GetService("Workspace").Terrain["_Game"].Admin.Regen.ClickDetector)
        end

        if split[1] == prefix.."goto" then
            local v = gpfs(split[2])
            if v == "false" then
                return notif("Your missing a arg (Player)", Color3.fromRGB(160, 32, 240), 5)
            end
            chatshit("tp me "..v.Name)
        end

        if split[1] == prefix.."rj" then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId,game.Players.LocalPlayer)
        end

        if split[1] == prefix.."rej" then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId,game.Players.LocalPlayer)
        end

        if split[1] == prefix.."rejoin" then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId,game.Players.LocalPlayer)

        end

        if split[1] == prefix.."rlag" then
            local v = gpfs(split[2])
            if v == "false" then
                return notif("Your missing a arg (Player)", Color3.fromRGB(160, 32, 240), 5)
            end
            game.Players:Chat("respawn "..v.Name)
wait(.35)
chatshit("size me nan")
                    chatshit("size "..v.Name.." nan")
                    chatshit("ff "..v.Name)
                    chatshit("speed "..v.Name.." 0")
                    chatshit("setgrav "..v.Name.." 1000")  
                    wait(.35)
                    chatshit("jail/"..v.Name)
                local a = true
                if a then
                    for i=1,400 do
                        chatshit("rocket/me/me/me")
                        chatshit("rocket/"..v.Name.."/"..v.Name.."/"..v.Name)
                end
                a=not a
            end
            wait(0.333)
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(6)
            game.Players.LocalPlayer.Character.Animate:Destroy()
            for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do v:Stop()end
                            
            local timer = os.clock()
        local a = true
                repeat game:GetService("RunService").RenderStepped:Wait()
                spawn(function()
                for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v.Name == "Rocket" then v.CanCollide = false end
                end
                for i,v in pairs(v.Character:GetChildren()) do
                    if v.Name == "Rocket" then v.CanCollide = false end
                end
                    --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,1)*CFrame.Angles(0,math.rad(math.random(0,360)),0) * CFrame.new(0,0,-1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(180),0)*CFrame.new(0,0,-2)
                for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    pcall(function()
                        v.Velocity = Vector3.new(0,0,0)
                        v.RotVelocity = Vector3.new(0,0,0)
                    end)
                end
                if a then
                    game.Players:Chat("rocket/me/me/me")
                    else
                        game.Players:Chat("rocket/"..v.Name.."/"..v.Name.."/"..v.Name)
                    end
                    a=not a
                end)
                until os.clock()-timer>30 or not v
                game.Players:Chat("respawn me")
                wait(.35)
                chatshit("reload "..v.Name)
                wait(0.333)
            end

            local bending

if split[1] == prefix.."bend" then
local v = gpfs(split[2])
if v == "false" then
    return notif("Your missing a arg (Player)", Color3.fromRGB(160, 32, 240), 5)
end
if bending == true then
    return
else
bending = true
chatshit("rocket/".. v.Name)
task.wait(.6)
chatshit("freeze ".. v.Name .. " (fuck)")
chatshit("unrocket/".. v.Name)
repeat task.wait() until not workspace:FindFirstChild(v.Name):FindFirstChild("ice")
chatshit("name ".. v.Name .." ".. v.DisplayName)
repeat task.wait() until workspace:FindFirstChild(v.Name):FindFirstChild(v.DisplayName)
chatshit("thaw ".. v.Name .. " (fuck)")
repeat task.wait() until not workspace:FindFirstChild(v.Name):FindFirstChild("ice")
chatshit("unseizure ".. v.Name .. " (fuck)")
chatshit("tp ".. v.Name .." ".. v.Name .. " (fuck)")
chatshit("sit ".. v.Name)
bending = false
end
end


        if split[1] == prefix.."nok" then
            for i, v in pairs(game:GetService("Workspace").Terrain._Game.Workspace.Obby:GetChildren()) do
                v.CanTouch = false
            end
        end

        if split[1] == prefix.."fixfilter" then
            say("[Singularity X]:Fixing filter")
            chatshit("(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)")
            chatshit("(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)")
            chatshit("(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)")
            chatshit("(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)")
            chatshit("(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)")
            chatshit("(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)(!)")
            chatshit("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@")
            chatshit("family friendly PG")
            wait(.35)
            say("[Singularity X]:Filter Fixed")
        end
        
        if split[1] == prefix.."dex" then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()
        end

        if split[1] == prefix.."unnok" then
            for i, v in pairs(game:GetService("Workspace").Terrain._Game.Workspace.Obby:GetChildren()) do
                v.CanTouch = true
            end
        end
    end)


    local CommandBar = Instance.new("ScreenGui")
    CommandBar.ResetOnSpawn = false
    local Main = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local BarTextBox = Instance.new("TextBox")
    local ToggleKey = Enum.KeyCode.Semicolon
    
    CommandBar.Name = "CommandBar"
    CommandBar.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    CommandBar.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    Main.Name = "Main"
    Main.Parent = CommandBar
    Main.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Main.BackgroundTransparency = 0.3
    Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.794447303, 0, 0.930463552, 0)
    Main.Size = UDim2.new(0, 292, 0, 42)
    Main.ZIndex = 99999
    
    UICorner.Parent = Main
    
    BarTextBox.Name = "BarTextBox"
    BarTextBox.Parent = Main
    BarTextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    BarTextBox.BackgroundTransparency = 1.000
    BarTextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    BarTextBox.BorderSizePixel = 0
    BarTextBox.Size = UDim2.new(0, 292, 0, 41)
    BarTextBox.Font = Enum.Font.SourceSans
    BarTextBox.PlaceholderText = "Type a command... ';'"
    BarTextBox.Text = ""
    BarTextBox.TextColor3 = Color3.fromRGB(160, 160, 160)
    BarTextBox.TextSize = 21.000
    
    local function onSubmit()
        local input = BarTextBox.Text
        if (input ~= "") then
            game.Players:Chat(input)
            BarTextBox.Text = ""
        end
    end
    
    local function onInput(input, gameProcessedEvent)
        if (not gameProcessedEvent) and (input.KeyCode == ToggleKey) then
            task.wait(0.0001)
            BarTextBox:CaptureFocus()
        end
    end
    
    BarTextBox.FocusLost:Connect(onSubmit)
    game:GetService("UserInputService").InputBegan:Connect(onInput)

    coroutine.wrap(function()
        local function hasPerm(plr)
            local PermNBC = 66254
            local PermBC = 64354
            local UserID = plr.UserId
            if string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. UserID .. "/items/GamePass/" .. PermNBC), PermNBC)
                or string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. UserID .. "/items/GamePass/" .. PermBC), PermBC) then
                return true
            else
                return false
            end
        end
        local function hasPersons(plr)
            local PersonNBC = 35748
            local PersonBC = 37127
            local UserID = plr.UserId
            if string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. UserID .. "/items/GamePass/" .. PersonNBC), PersonNBC)
                or string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. UserID .. "/items/GamePass/" .. PersonBC), PersonBC) then
                return true
            else
                return false
            end
        end
        local players = game:GetService("Players"):GetPlayers()
        game.StarterGui:SetCoreGuiEnabled("PlayerList", false)
        local PlayerList = game:GetService("CoreGui").PlayerList
        
        
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0, 200, 0, (60 + 5) * 7)
        frame.Position = UDim2.new(1, -220, 0.5, -227)
        frame.BackgroundTransparency = 1
        frame.BorderSizePixel = 0
        frame.Parent = PlayerList
        local function createBubble(parent)
            local bubble = Instance.new("Frame")
            bubble.Size = UDim2.new(1, 0, 0, 60)
            bubble.BackgroundTransparency = 1
            local cornerRadius = Instance.new("UICorner")
            cornerRadius.CornerRadius = UDim.new(0, 4)
            cornerRadius.Parent = bubble
            local displayNameLabel = Instance.new("TextLabel")
            displayNameLabel.Size = UDim2.new(1, -10, 0, 60 * 0.5)
            displayNameLabel.Position = UDim2.new(0, 5, 0, 1)
            displayNameLabel.BackgroundTransparency = 1
            displayNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            displayNameLabel.TextSize = 16
            displayNameLabel.Font = Enum.Font.SourceSansBold
            displayNameLabel.Parent = bubble
            local usernameLabel = Instance.new("TextLabel")
            usernameLabel.Size = UDim2.new(1, -10, 0, 60 * 0.5)
            usernameLabel.Position = UDim2.new(0, 5, 0, 60 * 0.3)
            usernameLabel.BackgroundTransparency = 1
            usernameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            usernameLabel.TextSize = 14
            usernameLabel.Font = Enum.Font.SourceSans
            usernameLabel.Parent = bubble
            local thumbnailImage = Instance.new("ImageLabel")
            thumbnailImage.Size = UDim2.new(0, 30, 0, 30)
            thumbnailImage.Position = UDim2.new(0, 5, 0, 60 * 0.5 + 9)
            thumbnailImage.AnchorPoint = Vector2.new(0, 0.5)
            thumbnailImage.BackgroundTransparency = 1
            thumbnailImage.Parent = bubble
            bubble.Parent = parent
            return bubble, displayNameLabel, usernameLabel, thumbnailImage
        end
        local function updatePlayerList()
            for _, child in pairs(frame:GetChildren()) do
                child:Destroy()
            end
            local totalHeight = frame.Size.Y.Offset
            local availableHeight = math.min(totalHeight, (#players * (60 + 5)) - 5)
            local spacing = availableHeight / #players
            for i, player in pairs(game.Players:GetPlayers()) do
                local bubble, displayNameLabel, usernameLabel, thumbnailImage = createBubble(frame)
                bubble.BackgroundColor3 = Color3.fromRGB(20,20,20)
                bubble.BackgroundTransparency = .1
                if player.Name == game.Players.LocalPlayer.Name then
                    displayNameLabel.Text = player.DisplayName
                    displayNameLabel.TextColor3 = Color3.fromRGB(75,200,255)
                    usernameLabel.Text = "@" .. player.Name
                    usernameLabel.TextColor3 = Color3.fromRGB(100,200,255)
                else
                    displayNameLabel.Text = player.DisplayName;
                    usernameLabel.Text = "@" .. player.Name;
                end
                local yOffset = (i - 1) * (60 + 5) + -240
                bubble.Position = UDim2.new(0, 15, 0, yOffset)
                local thumbnailType = Enum.ThumbnailType.HeadShot
                local thumbnailSize = Enum.ThumbnailSize.Size420x420
                local thumbnailUrl = game:GetService("Players"):GetUserThumbnailAsync(player.UserId, thumbnailType, thumbnailSize)
                thumbnailImage.Image = thumbnailUrl
                thumbnailImage.Size = UDim2.new(0, 30, 0, 30)
                local aspectRatio = thumbnailImage.ImageRectSize.X / thumbnailImage.ImageRectSize.Y
                if thumbnailImage.Size.X.Offset > 30 or thumbnailImage.Size.Y.Offset > 30 then
                    if aspectRatio > 1 then
                        thumbnailImage.Size = UDim2.new(0, 30, 0, 30 / aspectRatio)
                    else
                        thumbnailImage.Size = UDim2.new(0, 30 * aspectRatio, 0, 30)
                    end
                end
                if hasPerm(player) then
                    local permissionLabel = Instance.new("TextLabel")
                    permissionLabel.Size = UDim2.new(0, 80, 0, 30)
                    permissionLabel.Position = UDim2.new(1, -130, 0, 31)
                    permissionLabel.BackgroundTransparency = 1
                    permissionLabel.Text = "Perm"
                    permissionLabel.TextColor3 = Color3.fromRGB(200, 50, 33)
                    permissionLabel.TextSize = 14
                    permissionLabel.Font = Enum.Font.SourceSans
                    permissionLabel.TextXAlignment = Enum.TextXAlignment.Right
                    permissionLabel.TextYAlignment = Enum.TextYAlignment.Center
                    permissionLabel.Parent = bubble
                end
                if hasPersons(player) then
                    local permissionLabelr = Instance.new("TextLabel")
                    permissionLabelr.Size = UDim2.new(0, 80, 0, 30)
                    permissionLabelr.Position = UDim2.new(1, -178, 0, 31)
                    permissionLabelr.BackgroundTransparency = 1
                    permissionLabelr.Text = "Person299"
                    permissionLabelr.TextColor3 = Color3.fromRGB(40, 151, 126)
                    permissionLabelr.TextSize = 14
                    permissionLabelr.Font = Enum.Font.SourceSans
                    permissionLabelr.TextXAlignment = Enum.TextXAlignment.Right
                    permissionLabelr.TextYAlignment = Enum.TextYAlignment.Center
                    permissionLabelr.Parent = bubble
                end
            end
        end
        
        local function slidePlayerList()
            isSlided = not isSlided
            local slidePosition = UDim2.new(1, -220, 0.5, -((60 + 5) * 7) / 2)
            local slideOutPosition = UDim2.new(1, 0, 0.5, -((60 + 5) * 7) / 2)
            local targetPosition = isSlided and slideOutPosition or slidePosition
            frame:TweenPosition(targetPosition, Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, 0.3, true)
        end
        
        game:GetService("UserInputService").InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.Tab then
                slidePlayerList()
            end
        end)
        frame.Position = isSlided and UDim2.new(1, 0, 0.5, -((60 + 5) * 7) / 2) or UDim2.new(1, -220, 0.5, -((60 + 5) * 7) / 2)
        game:GetService("Players").PlayerAdded:Connect(updatePlayerList)
        local function isLocalPlayerLeaving(player)
            if player == game.Players.LocalPlayer then
                return true
            else
                return false
            end
        end
        
        local Connections = {}
        local function isLocalPlayerLeaving(player)
            if player == game.Players.LocalPlayer then
                return true
            else
                return false
            end
        end
        local function removeFunction()
            for _, Connection in pairs(Connections) do
                Connection:Disconnect()
                break
            end
        end
        Connections[#Connections + 1] = game:GetService("Players").PlayerRemoving:Connect(function(player)
            if isLocalPlayerLeaving(player) then
                removeFunction()
                return
            end
            updatePlayerList()
        end)
        updatePlayerList()
    end)()
    local autoafk = true
    local UserInputService = game:GetService("UserInputService")
    
    UserInputService.WindowFocusReleased:Connect(
        function()
            if autoafk == true then
                chatshit("name me [Tabbed out]\n"..game.Players.LocalPlayer.DisplayName.."")
                chatshit("ff me")
                    end
    end)
    
    UserInputService.WindowFocused:Connect(
        function()
            if autoafk == true then
                print("You are no longer afk!")
            chatshit("unname me")
            chatshit("unff me")
            end
    end)
    
    for i,v in pairs(onstart) do
        game.Players:Chat(prefix..v)
    end
    local function hi(title,text,duration,...)
        game.StarterGui:SetCore("SendNotification", {
          Title = title;
          Text = text;
          Duration = duration;
        })
      end
    
      game.Players.ChildAdded:Connect(function(player)
        hi("Player Joined",""..player.Name.."  Has joined the server",2.5 )
        end)
      
        game.Players.ChildRemoved:Connect(function(player)
        hi("Player Left",""..player.Name.."  Has rage quit",2.5 )
        end)
        spawn(function()
        local time = math.floor( ( tick() - start_time ) * 1000 )
        notif("Loaded in "..time.." ms", Color3.fromRGB(160, 32, 240), 5) say("[Singularity X]:Loaded in "..time.."ms") log_file('[Loading]: loaded in ' .. time .. 'ms')
        end)
